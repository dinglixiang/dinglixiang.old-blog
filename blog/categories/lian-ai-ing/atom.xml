<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 恋爱ing | Dinglixiang]]></title>
  <link href="http://dinglixiang.github.io/blog/categories/lian-ai-ing/atom.xml" rel="self"/>
  <link href="http://dinglixiang.github.io/"/>
  <updated>2013-04-29T15:49:25+08:00</updated>
  <id>http://dinglixiang.github.io/</id>
  <author>
    <name><![CDATA[Dinglixiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[恋爱ing之富文本编辑器ckeditor]]></title>
    <link href="http://dinglixiang.github.io/blog/2013/04/29/lian-ai-ingzhi-fu-wen-ben-bian-ji-qi-ckeditor/"/>
    <updated>2013-04-29T15:42:00+08:00</updated>
    <id>http://dinglixiang.github.io/blog/2013/04/29/lian-ai-ingzhi-fu-wen-ben-bian-ji-qi-ckeditor</id>
    <content type="html"><![CDATA[<blockquote><p>项目github地址：<a href="https://github.com/dinglixiang/Shopping">恋爱ing </a></p>

<p>bootstrap地址：<a href="http://xiemin.me/bootstrap-2.3.0/">Bootstrap</a></p></blockquote>

<p><strong><em>Before：界面引入bootstrap。</em></strong></p>

<p>在处理商品添加时，商品的描述信息会有很多，使用富文本编辑器可以很好的处理这个问题。</p>

<p>感觉别人写的已经很好了，我自己也没什么可以添加的！</p>

<p>直接贴链接~~~</p>

<p><a href="http://czq5783095.iteye.com/blog/1317897">http://czq5783095.iteye.com/blog/1317897</a></p>

<p><a href="http://hi.baidu.com/caoji1117/item/6fcba8bd1d8455f363388e47">http://hi.baidu.com/caoji1117/item/6fcba8bd1d8455f363388e47</a></p>

<p><a href="http://ckeditor.com/">ckeditor官网</a>，在此可下载ckeditor的压缩包与jar文件，以及查看官方的使用文档。</p>

<p>我的ckeditor在jsp中的代码可在<a href="https://github.com/dinglixiang/Shopping/blob/master/web/NewProduct.jsp">新建产品时的描述信息</a>查看。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[恋爱ing之Javascript控制文本框只能输入数字]]></title>
    <link href="http://dinglixiang.github.io/blog/2013/04/29/lian-ai-ingzhi-javascriptkong-zhi-wen-ben-kuang-zhi-neng-shu-ru-shu-zi/"/>
    <updated>2013-04-29T15:30:00+08:00</updated>
    <id>http://dinglixiang.github.io/blog/2013/04/29/lian-ai-ingzhi-javascriptkong-zhi-wen-ben-kuang-zhi-neng-shu-ru-shu-zi</id>
    <content type="html"><![CDATA[<blockquote><p>项目github地址：<a href="https://github.com/dinglixiang/Shopping">恋爱ing </a></p>

<p>bootstrap地址：<a href="http://xiemin.me/bootstrap-2.3.0/">Bootstrap</a></p></blockquote>

<p>在填写如商品价格时，我们需要加入一些限制，如只能输入数字与小数点的限制。</p>

<p>◆ Javascript代码</p>

<pre><code>&lt;input   
onkeypress = "return event.keyCode&gt;=48&amp;&amp;event.keyCode&lt;=57||        event.keyCode==46"   
onpaste = "return !clipboardData.getData('text').match(/\D/)"   
ondragenter = "return false"   
style = "ime-mode:Disabled"   
/&gt;   
</code></pre>

<p>说明：</p>

<p>1.只能输入0到9和小数点</p>

<p>2.只能粘贴数字</p>

<p>3.不能拖动内容进来</p>

<p>4.禁止使用输入法</p>

<p>上面代码出处：<a href="http://www.cnblogs.com/cloudgamer/articles/1138136.html">http://www.cnblogs.com/cloudgamer/articles/1138136.html</a></p>

<p>但是在上述代码的限制中，我是可以添加 N 多个小数点的，并不能完全满足我的需求。</p>

<p>将其改进的代码如下：</p>

<p>◆ <strong>只能输入数字和一个点，且输入的第一个字符不能为点，可按退格键删除数字或点</strong></p>

<pre><code>&lt;script type ="text/javascript " &gt;
        function vailFloatNumberPerfect(evnt,obj){
         evnt=evnt||window.event;
         var keyCode=window.event?evnt.keyCode:evnt.which;
         if((obj.value.length==0 || obj.value.indexOf(".")!=-1) &amp;&amp; keyCode==46) return false;
         return keyCode&gt;=48&amp;&amp;keyCode&lt;=57||keyCode==46||keyCode==8;
        }
&lt;/script&gt;
</code></pre>

<p>使用：</p>

<pre><code>&lt;input   
onkeypress = "return vaildFloatNumberPerfect(event,this) "   
onpaste = "return !clipboardData.getData('text').match(/\D/) "   
ondragenter = "return false "   
style = "ime-mode:Disabled "   
/&gt; 
</code></pre>

<p>如：<a href="https://github.com/dinglixiang/Shopping/blob/master/web/NewProduct.jsp">新建产品时的价格</a></p>

<p>参考自： <a href="http://www.denghuafeng.com/post-109.html">http://www.denghuafeng.com/post-109.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[恋爱ing之读取配置信息]]></title>
    <link href="http://dinglixiang.github.io/blog/2013/04/29/lian-ai-ingzhi-du-qu-pei-zhi-xin-xi/"/>
    <updated>2013-04-29T15:18:00+08:00</updated>
    <id>http://dinglixiang.github.io/blog/2013/04/29/lian-ai-ingzhi-du-qu-pei-zhi-xin-xi</id>
    <content type="html"><![CDATA[<blockquote><p>项目github地址：<a href="https://github.com/dinglixiang/Shopping">恋爱ing </a></p>

<p>bootstrap地址：<a href="http://xiemin.me/bootstrap-2.3.0/">Bootstrap</a></p></blockquote>

<p><strong><em>Before：界面引入bootstrap。</em></strong></p>

<p>在本项目中，为了方便快捷，我是将管理员的账号密码等信息放在配置文件<code>web.xml</code>中的。</p>

<p>如在<a href="https://github.com/dinglixiang/Shopping/blob/master/web/WEB-INF/web.xml">web.xml</a>文件中，有以下配置信息：</p>

<pre><code>&lt;context-param&gt;
    &lt;param-name&gt;email&lt;/param-name&gt;
    &lt;param-value&gt;admin@gmail.com&lt;/param-value&gt;
&lt;/context-param&gt;
</code></pre>

<p>那么，怎样读取这个配置账号呢？</p>

<p>◆ 在jsp页面中，可以通过 <code>${initParam.email}</code>直接获取到配置文件的信息并显示在页面上，但是在管理员登录时，我们还要进行信息的比较。</p>

<p>如何在jsp 的&lt;%  %>中获取配置信息呢？</p>

<p>我们可通过 <code>application.getInitParameter("email")</code> 来获取<code>web.xml</code>中的<code>email</code>的值，从而与登录界面传递的值进行比较验证。如：<a href="https://github.com/dinglixiang/Shopping/blob/master/web/AdminValidate.jsp">AdminValidate.jsp</a> 所示。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[恋爱ing之返回顶部、底部]]></title>
    <link href="http://dinglixiang.github.io/blog/2013/04/27/lian-ai-ingzhi-fan-hui-ding-bu-%2C-di-bu/"/>
    <updated>2013-04-27T15:10:00+08:00</updated>
    <id>http://dinglixiang.github.io/blog/2013/04/27/lian-ai-ingzhi-fan-hui-ding-bu-,-di-bu</id>
    <content type="html"><![CDATA[<blockquote><p>项目github地址：<a href="https://github.com/dinglixiang/Shopping">恋爱ing </a></p>

<p>bootstrap地址：<a href="http://xiemin.me/bootstrap-2.3.0/">Bootstrap</a></p></blockquote>

<p>当页面信息过多时，为方便信息的浏览，人性化操作，特加入返回顶部、底部功能。</p>

<p>通过网上搜索，找到如下方法。
以<a href="https://github.com/dinglixiang/Shopping/blob/master/web/FlowerDetails.jsp">FlowerDetails.jsp</a>为例。</p>

<p><strong>1.在<code>&lt;head&gt;&lt;/head&gt;</code>标签中加入如下js脚本，并引入<a href="https://github.com/dinglixiang/Shopping/tree/master/web">js文件</a>：</strong></p>

<pre><code>&lt;script type="text/javascript" src="jquery-1.4.1.js"&gt;&lt;/script&gt;
&lt;style type="text/css"&gt;
    .go{width:47px;height:65px;position:fixed;_position:absolute;_top:expression(eval(document.documentElement.scrollTop+document.documentElement.clientHeight-this.offsetHeight-(parseInt(this.currentStyle.marginTop,10)||200)-(parseInt(this.currentStyle.marginBottom,10)||0)));right:20px;bottom:30%; background-color: lightgoldenrodyellow; background-repeat:no-repeat;}
    .go a{text-indent:999em;width:37px;margin:5px;border:0;overflow:hidden;float:left; cursor:pointer;}
    .go .top{background-position:0 0px;height:22px;background-image: url(./images/a.jpg);}
    .go .feedback{background-position:0 -22px;height:32px}
    .go .bottom{background-position:0 -55px;height:22px;background-image: url(./images/a.jpg);}
    .go .top:hover{background-position:-38px -0px}
    .go .feedback:hover{background-position:-38px -22px }
    .go .bottom:hover{background-position:-38px -55px}
    &lt;/style&gt;
    &lt;script type="text/javascript"&gt;
        $(function () {

            $(".top").click(//定义返回顶部点击向上滚动的动画
            function () {
                $('html,body').animate({ scrollTop: 0 }, 700);
            });
            $(".bottom").click(//定义返回顶部点击向上滚动的动画
            function () {
                $('html,body').animate({ scrollTop: document.body.clientHeight }, 700);

            });

        })
&lt;/script&gt;
</code></pre>

<p><strong>2.在<code>&lt;/body&gt;</code>标签之前加入如下代码：</strong></p>

<pre><code>&lt;div class="go"&gt;
  &lt;a title="返回顶部" class="top"&gt;&lt;/a&gt;
  &lt;a title="返回底部" class="bottom" &gt;&lt;/a&gt;
&lt;/div&gt;
</code></pre>

<p>最后，页面信息过多时，即可查看效果。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[恋爱ing之商品搜索]]></title>
    <link href="http://dinglixiang.github.io/blog/2013/04/27/lian-ai-ingzhi-shang-pin-sou-suo/"/>
    <updated>2013-04-27T15:01:00+08:00</updated>
    <id>http://dinglixiang.github.io/blog/2013/04/27/lian-ai-ingzhi-shang-pin-sou-suo</id>
    <content type="html"><![CDATA[<blockquote><p>项目github地址：<a href="https://github.com/dinglixiang/Shopping">恋爱ing </a></p>

<p>bootstrap地址：<a href="http://xiemin.me/bootstrap-2.3.0/">Bootstrap</a></p></blockquote>

<p><strong><em>Before：界面引入bootstrap。</em></strong></p>

<p>本项目的搜索仅限于模糊搜索。</p>

<p><strong>1.搜索样式表单：</strong></p>

<p>◆<a href="https://github.com/dinglixiang/Shopping/blob/master/web/flowers.jsp">flowers.jsp</a></p>

<pre><code>&lt;form class="navbar-search pull-search" action="SearchResult.jsp"&gt;                                              
 &lt;input type="text" class="search-query" name="condition"&gt;
 &lt;button type="submit" class="btn" &gt;搜索&lt;/button&gt;
&lt;/form&gt;
</code></pre>

<p><strong>2.处理表单数据</strong>
◆<a href="https://github.com/dinglixiang/Shopping/blob/master/web/SearchResult.jsp">SearchResult.jsp</a>，通过javaBean调用<a href="https://github.com/dinglixiang/Shopping/blob/master/src/java/pack/FlowerBean.java">SearchResult方法</a>,调用方法请参考前几篇blog。</p>

<pre><code>//接受搜索条件参数
String condition=request.getParameter("condition");
//通过javaBean调用搜索方法
ArrayList flowers=flower.SearchResult(condition);
//循环输出结果
Iterator iter=flowers.iterator();
......此处省略
</code></pre>

<p>◆调用pack.FlowerBean.java中
<a href="https://github.com/dinglixiang/Shopping/blob/master/src/java/pack/FlowerBean.java">SearchResult方法</a></p>

<pre><code>//模糊查询的sql语句
String strsql="select * from products where product_name like "+"'%"+condition+"%'";
</code></pre>

<p>OK，我就实现了这么一点模糊查询的功能了。后续可能会添加更加强大点的搜索~~~</p>
]]></content>
  </entry>
  
</feed>
